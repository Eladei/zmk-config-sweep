// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 9>;
        };

        combo_single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E          &kp R         &kp T            &kp Y      &kp U         &kp I         &kp O        &kp P
&hrm LGUI A  &hrm LALT S  &hrm LSHIFT D  &hrm LCTRL F  &kp G            &kp H      &hrm RCTRL J  &hrm RSHFT K  &hrm RALT L  &hrm RIGHT_WIN SEMICOLON
&kp Z        &kp X        &kp C          &hrm RALT V   &kp B            &kp N      &hrm RALT M   &kp COMMA     &kp DOT      &kp FSLH
                                         &lt 1 SPACE   &kp BACKSPACE    &kp ENTER  &lt 2 SPACE
            >;
        };

        calc_and_operations {
            bindings = <
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LC(Y)    &kp LC(LS(T))  &none             &none       &kp KP_N7  &kp KP_N8  &kp KP_N9  &none
&kp LC(A)          &kp LC(S)        &kp LS(TAB)  &kp LC(F)      &kp DELETE        &none       &kp KP_N4  &kp KP_N5  &kp KP_N6  &none
&kp LC(Z)          &kp LC(X)        &kp LC(C)    &kp LC(V)      &kp LC(DELETE)    &kp KP_NUM  &kp KP_N1  &kp KP_N2  &kp KP_N3  &none
                                                 &none          &none             &kp ENTER   &kp KP_N0
            >;
        };

        special_keys_and_arrows {
            bindings = <
&kp ESC            &kp F1            &kp F2          &kp F3         &kp F4        &kp END    &none                  &kp UP                      &none                  &kp TILDE
&hrm LEFT_WIN TAB  &hrm LEFT_ALT F5  &hrm LSHIFT F6  &hrm LCTRL F7  &kp F8        &kp INS    &hrm LCTRL LEFT_ARROW  &hrm LEFT_SHIFT DOWN_ARROW  &hrm LALT RIGHT_ARROW  &kp RIGHT_WIN
&kp CAPS           &kp F9            &kp F10         &kp F11        &kp F12       &kp PSCRN  &none                  &none                       &none                  &none
                                                     &none          &kp DELETE    &none      &none
            >;
        };
    };
};
